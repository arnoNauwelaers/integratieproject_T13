@model politiekeBarometer.Models.ItemCreateViewModel

@{
    Layout = Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Nieuw item</title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Nieuw item</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.type, new List<SelectListItem>
               {
                        new SelectListItem { Text = "Persoon", Value = "Person"},
                        new SelectListItem { Text = "Organisatie", Value = "Organization" },
                        new SelectListItem { Text = "Thema", Value = "Theme" }
               })
                </div>
            </div>

            <div class="form-group" >
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" id="TwitterUrl">
                @Html.LabelFor(model => model.TwitterUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    &#64 @Html.EditorFor(model => model.TwitterUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TwitterUrl, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" id="organization">
                @Html.LabelFor(model => model.SelectedOrganizationId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.SelectedOrganizationId, Model.Organizations, "")
                </div>
            </div>

            <div class="form-group" id="keyword">
                @Html.LabelFor(model => model.StringKeywords, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StringKeywords, new { htmlAttributes = new { @Value = "Woorden splitsen door komma", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StringKeywords, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Terug naar lijst", "AdminItemIndex")
    </div>

    <script>
        document.getElementById('type').addEventListener("change", hideElements);
        hideElements();
        function hideElements() {
            if ($("#type option:selected").val() != "Person") {
                $("#organization").hide();
            }
            else {
                $("#organization").show();
            }

            if ($("#type option:selected").val() != "Theme") {
                $("#keyword").hide();
            } else {
                $("#keyword").show();
            }

            if ($("#type option:selected").val() == "Theme") {
                $("#TwitterUrl").hide();
            } else {
                $("#TwitterUrl").show();
            }
        }
    </script>
</body>
</html>